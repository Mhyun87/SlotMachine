
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.ImageIcon;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author marlon
 */
public class SlotMachineGUI extends javax.swing.JFrame {

    /**
     * Creates new form SlotMachineGUI
     */
    private int credits = 100, boughtCredits = 100, bet = 15, matchThree, matchTwo, win, lost;
    private double payout = 25.0, creditBuyout = 10.0, funds;
    private int reel1 = 7, reel2 = 7, reel3 = 7; // starting values of the reels.
    private ArrayList<ImageIcon> images = new ArrayList<ImageIcon>();
    private DecimalFormat df = new DecimalFormat("0.00");
    
    public SlotMachineGUI(int credits, int boughtCredits, int bet, double payout, double creditBuyout, int reel1, int reel2, int reel3) {
        
        this.credits=credits;
        this.boughtCredits=boughtCredits;
        this.bet=bet;
        this.payout=payout;
        this.creditBuyout=creditBuyout;
        this.reel1=reel1;
        this.reel2=reel2;
        this.reel3=reel3;
    }
    
    public SlotMachineGUI() {
        initComponents();
        loadImages();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pnlReels = new javax.swing.JPanel();
        pnlReel1 = new javax.swing.JPanel();
        lblReel1 = new javax.swing.JLabel();
        pnlReel2 = new javax.swing.JPanel();
        lblReel2 = new javax.swing.JLabel();
        pnlReel3 = new javax.swing.JPanel();
        lblReel3 = new javax.swing.JLabel();
        btnCash = new javax.swing.JButton();
        btnSpin = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblWon = new javax.swing.JLabel();
        lblMatchTwo = new javax.swing.JLabel();
        lblLost = new javax.swing.JLabel();
        lblMatchThree = new javax.swing.JLabel();
        lblMoney = new javax.swing.JLabel();
        lblCredits = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        cbAlwaysWin = new javax.swing.JCheckBox();
        cbSuperJackpot = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 255, 204));

        jLabel1.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Slot Machine Game");

        pnlReels.setBackground(new java.awt.Color(204, 204, 204));
        pnlReels.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pnlReel1.setBackground(new java.awt.Color(255, 215, 0));
        pnlReel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout pnlReel1Layout = new javax.swing.GroupLayout(pnlReel1);
        pnlReel1.setLayout(pnlReel1Layout);
        pnlReel1Layout.setHorizontalGroup(
            pnlReel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblReel1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
        );
        pnlReel1Layout.setVerticalGroup(
            pnlReel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblReel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlReel2.setBackground(new java.awt.Color(255, 215, 0));
        pnlReel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout pnlReel2Layout = new javax.swing.GroupLayout(pnlReel2);
        pnlReel2.setLayout(pnlReel2Layout);
        pnlReel2Layout.setHorizontalGroup(
            pnlReel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblReel2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
        );
        pnlReel2Layout.setVerticalGroup(
            pnlReel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblReel2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
        );

        pnlReel3.setBackground(new java.awt.Color(255, 215, 0));
        pnlReel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout pnlReel3Layout = new javax.swing.GroupLayout(pnlReel3);
        pnlReel3.setLayout(pnlReel3Layout);
        pnlReel3Layout.setHorizontalGroup(
            pnlReel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblReel3, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
        );
        pnlReel3Layout.setVerticalGroup(
            pnlReel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblReel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlReelsLayout = new javax.swing.GroupLayout(pnlReels);
        pnlReels.setLayout(pnlReelsLayout);
        pnlReelsLayout.setHorizontalGroup(
            pnlReelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReelsLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(pnlReel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(pnlReel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(pnlReel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        pnlReelsLayout.setVerticalGroup(
            pnlReelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReelsLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(pnlReelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pnlReel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlReel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlReel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        btnCash.setBackground(new java.awt.Color(255, 51, 51));
        btnCash.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 24)); // NOI18N
        btnCash.setForeground(new java.awt.Color(0, 0, 0));
        btnCash.setText("Buy Credits");
        btnCash.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCashActionPerformed(evt);
            }
        });

        btnSpin.setBackground(new java.awt.Color(51, 255, 51));
        btnSpin.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 24)); // NOI18N
        btnSpin.setForeground(new java.awt.Color(0, 0, 0));
        btnSpin.setText("Spin");
        btnSpin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSpin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpinActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Matched Two:");

        jLabel3.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Matched Three:");

        jLabel4.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Won:");

        jLabel5.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Lost:");

        jLabel6.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Credits:");

        jLabel7.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Money:");

        lblWon.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblWon.setForeground(new java.awt.Color(0, 0, 0));
        lblWon.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblMatchTwo.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblMatchTwo.setForeground(new java.awt.Color(0, 0, 0));
        lblMatchTwo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblLost.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblLost.setForeground(new java.awt.Color(0, 0, 0));
        lblLost.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblMatchThree.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblMatchThree.setForeground(new java.awt.Color(0, 0, 0));
        lblMatchThree.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblMoney.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblMoney.setForeground(new java.awt.Color(0, 0, 0));
        lblMoney.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblCredits.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblCredits.setForeground(new java.awt.Color(0, 0, 0));
        lblCredits.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(35, 35, 35)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblMatchThree, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                    .addComponent(lblMatchTwo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblWon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(94, 94, 94)
                        .addComponent(lblLost, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(64, 64, 64)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCredits, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                            .addComponent(lblMoney, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lblWon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCredits, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMatchTwo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblMatchThree, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 60, 60))))
        );

        lblStatus.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 24)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(0, 0, 0));
        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbAlwaysWin.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        cbAlwaysWin.setForeground(new java.awt.Color(0, 0, 0));
        cbAlwaysWin.setText("Always Win Mode");

        cbSuperJackpot.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        cbSuperJackpot.setForeground(new java.awt.Color(0, 0, 0));
        cbSuperJackpot.setText("Super Jackpot");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbAlwaysWin)
                        .addGap(243, 243, 243)
                        .addComponent(cbSuperJackpot))
                    .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCash, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSpin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlReels, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlReels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnCash, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbAlwaysWin)
                    .addComponent(cbSuperJackpot))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSpinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpinActionPerformed
        // TODO add your handling code here:
        if (funds < creditBuyout && credits < bet) {
                lblStatus.setText("Add More Money!");
                } else if ((credits - bet) >= 0) {
                    pnlReel1.setBackground(new java.awt.Color(255, 215, 0));
                    pnlReel2.setBackground(new java.awt.Color(255, 215, 0));
                    pnlReel3.setBackground(new java.awt.Color(255, 215, 0));
                    genReelNumbers();
                    matchCheck();
                    
                    } else {
                    lblStatus.setText("Bet is "+bet+" credits, purchase more with $!");
                    }
            buyCreditsCheck();
            
    }//GEN-LAST:event_btnSpinActionPerformed

    private void btnCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCashActionPerformed
        // TODO add your handling code here:
        buyCredits();
    }//GEN-LAST:event_btnCashActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SlotMachineGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SlotMachineGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SlotMachineGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SlotMachineGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SlotMachineGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnCash;
    public javax.swing.JButton btnSpin;
    public javax.swing.JCheckBox cbAlwaysWin;
    public javax.swing.JCheckBox cbSuperJackpot;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JLabel lblCredits;
    public javax.swing.JLabel lblLost;
    public javax.swing.JLabel lblMatchThree;
    public javax.swing.JLabel lblMatchTwo;
    public javax.swing.JLabel lblMoney;
    public javax.swing.JLabel lblReel1;
    public javax.swing.JLabel lblReel2;
    public javax.swing.JLabel lblReel3;
    public javax.swing.JLabel lblStatus;
    public javax.swing.JLabel lblWon;
    public javax.swing.JPanel pnlReel1;
    public javax.swing.JPanel pnlReel2;
    public javax.swing.JPanel pnlReel3;
    public javax.swing.JPanel pnlReels;
    // End of variables declaration//GEN-END:variables

    public void loadImages() {
        images.add(createImageIcon("/images/Banana.png", "Banana"));
        images.add(createImageIcon("/images/Bar.png", "Bar"));
        images.add(createImageIcon("/images/Bell.png", "Bell"));
        images.add(createImageIcon("/images/Cherry.png", "Cherry"));
        images.add(createImageIcon("/images/Clover.png", "Clover"));
        images.add(createImageIcon("/images/Diamond.png", "Diamond"));
        images.add(createImageIcon("/images/Plum.png", "Plum"));
        images.add(createImageIcon("/images/Seven.png", "Seven"));
        images.add(createImageIcon("/images/Watermelon.png", "Watermelon"));
        
        }
    
    /** Create a new ImageIcon, unless the URL is not found. */
    public ImageIcon createImageIcon(String path, String description) {
        java.net.URL imgURL = getClass().getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL, description);
            } else {
            System.err.println("Couldn't find file: " + path);
            return null;
            }
        }
    
    /** Increments matchThree by 1 and returns value. */
    public int matchThree() {
        matchThree++;
        return matchThree;
        
        }
    
    /** Increments matchTwo by 1 and returns value. */
    public int matchTwo() {
        matchTwo++;
        return matchTwo;
        }
    
    /** Increments lost by 1 and returns value. */
    public int lose() {
        lost++;
        return lost;
        }
    
    /** Increments win by 1, increases progress bar and returns value. */
    
    public int win() {
        win = matchThree + matchTwo;
        return win;
        }

    /** Generates the 3 reel numbers. */
    public void genReelNumbers() {
        Random rand = new Random();
        if (cbAlwaysWin.isSelected() == true) { // If the Always win cheat mode is enabled.
            int winType = rand.nextInt(4); // generates number between 0-3 to determine the type of win
            reel1 = rand.nextInt(images.size());
            if (winType == 0) { // winType = 0 - Reels 1, 2 and 3 will all match.
                reel2 = reel1;
                reel3 = reel1;
                } else if (winType == 1) { 	// winType = 1 - Reels 1 and 2 will match.
                    reel2 = reel1;
                    } else if (winType == 2) { 	// winType = 2 - Reels 1 and 3 will match.
                        reel3 = reel1;
                        } else {		
                        // winType = 3 - Reels 2 and 3 will match.
                        if (reel1 >= 0 ) { 
                            reel2 = reel1 + 1;
                            reel3 = reel1 + 1;
                            } if (reel1 == images.size()-1) {
                                reel2 = reel1 - 1;
                                reel3 = reel1 - 1;
                                }
                            }
            } else { // If the Always win cheat mode is disabled play a normal game.
            reel1 = rand.nextInt(images.size());
            reel2 = rand.nextInt(images.size());
            reel3 = rand.nextInt(images.size());
            }
        setReelIcon(reel1, reel2, reel3); // Set the reel image
        }
    
    /** Sets the reels icon based on loaded image in images ArrayList. */
    public void setReelIcon(int ico1, int ico2, int ico3) {
        lblReel1.setIcon(images.get(ico1)); // icon = the ArrayList index = random reel number
        lblReel2.setIcon(images.get(ico2));
        lblReel3.setIcon(images.get(ico3));
        }
    
    /** Checks for number matches and adjusts score depending on result. */
    public void matchCheck() {
        if (reel1 == reel2 && reel2 == reel3) {
            lblStatus.setText("You matched THREE symbols ("+images.get(reel1).getDescription()+")! +$"+df.format(getPrize(payout))+"!");
            lblMatchThree.setText(matchThree()+"");
            pnlReel1.setBackground(new java.awt.Color(255, 0, 0)); // Highlights matched icons.
            pnlReel2.setBackground(new java.awt.Color(255, 0, 0));
            pnlReel3.setBackground(new java.awt.Color(255, 0, 0));	
            } else if (reel1 == reel2 || reel1 == reel3) {
                lblStatus.setText("You matched TWO symbols ("+images.get(reel1).getDescription()+")! +$"+df.format(getPrize(payout))+"!");
                lblMatchTwo.setText(matchTwo()+"");
                if (reel1 == reel2) {
                    pnlReel1.setBackground(new java.awt.Color(255, 0, 0)); // Highlights matched icons.
                    pnlReel2.setBackground(new java.awt.Color(255, 0, 0));
                    } else if (reel1 == reel3){
                        pnlReel1.setBackground(new java.awt.Color(255, 0, 0)); // Highlights matched icons.
                        pnlReel3.setBackground(new java.awt.Color(255, 0, 0));
                        }
                } else if (reel2 == reel3) {
                    lblStatus.setText("You matched TWO symbols ("+images.get(reel2).getDescription()+")! +$"+df.format(getPrize(payout))+"!");
                    lblMatchTwo.setText(matchTwo()+"");
                    pnlReel2.setBackground(new java.awt.Color(255, 0, 0)); // Highlights matched icons.
                    pnlReel3.setBackground(new java.awt.Color(255, 0, 0));
                    } else {
                    lblStatus.setText("Sorry, you didn't match any symbols. -"+bet+" credits!");
                    lblLost.setText(lose()+"");
                    }
        lblCredits.setText((credits -= bet)+""); // deduct bet amount from available credits.
        lblMoney.setText("$"+df.format((funds += getPrize(payout)))); // If there is a win add amount to cash pot.
        lblWon.setText(win()+""); // increment win amount.
        }
    /** calculates prize to be awarded for win based on number of matches and cheats. */
    public double getPrize(double prize) {
        if (reel1 == reel2 && reel2 == reel3) {
            if (cbSuperJackpot.isSelected() == true) {
                prize *= 100; // if cheating and all are matched return the full pay out x100.
                } else {
                prize = payout; // if all are matched return the full pay out.
                }
            } else if (reel1 == reel2 || reel1 == reel3 || reel2 == reel3) {
                if (cbSuperJackpot.isSelected() == true) {
                    prize *= 50; // if cheating and two are matched return the pay out x50.
                    } else {
                    prize = payout / 5; // if two are matched return 1/5th of the pay out.
                    }
                } else {
                prize = 0; // If no win return no prize.
                }
        return prize;
        }
    
    /** if user has enough funds to buy credits changes buttons color to alert user. */
    
    public void buyCreditsCheck() {
        if (funds < bet) {
            btnCash.setBackground(new java.awt.Color(255, 0, 0));
            } else {
            btnCash.setBackground(new java.awt.Color(50, 255, 50));
            }
        }
    
    /** if the player has enough funds credits are added. */
    public void buyCredits() {
        if (funds >= creditBuyout) {
            
           funds -= creditBuyout;
           lblMoney.setText("$"+df.format(funds));
           credits += boughtCredits;
           lblCredits.setText(credits+"");
           lblStatus.setText("+"+boughtCredits+" credits purchased! -$"+df.format(creditBuyout));
           } else {
            lblStatus.setText("Insufficient $ to purchase credits!");
            }
        buyCreditsCheck();
        }
}
